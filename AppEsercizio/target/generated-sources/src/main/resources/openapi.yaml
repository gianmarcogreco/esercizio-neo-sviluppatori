openapi: 3.0.0
info:
  title: App1 API
  version: 1.0.0
servers:
- url: http://localhost:8080
paths:
  /api/gelati:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Gelato'
                type: array
          description: Lista di gelati disponibile con successo
        "500":
          description: Errore interno del server
      summary: Ottieni una lista di gelati
      x-accepts:
      - application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gelato'
        required: true
      responses:
        "201":
          description: Gelato creato con successo
        "400":
          description: Richiesta non valida
        "500":
          description: Errore interno del server
      summary: Aggiungi un gusto nuovo di gelato
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/gelati/{id}:
    delete:
      parameters:
      - description: ID del gelato da cancellare
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Gelato cancellato con successo
        "404":
          description: Gelato non trovato
        "500":
          description: Errore interno del server
      summary: Cancella un gelato tramite ID
      x-accepts:
      - application/json
    get:
      parameters:
      - description: ID del gelato
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gelato'
          description: Dettagli del gelato recuperati con successo
        "404":
          description: Gelato non trovato
        "500":
          description: Errore interno del server
      summary: Ottieni un singolo gelato tramite ID
      x-accepts:
      - application/json
    put:
      parameters:
      - description: ID del gelato da aggiornare
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gelato'
        required: true
      responses:
        "200":
          description: Gelato aggiornato con successo
        "404":
          description: Gelato non trovato
        "400":
          description: Dati non validi
        "500":
          description: Errore interno del server
      summary: Aggiorna un gelato esistente
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/prenotante:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Prenotante'
                type: array
          description: Lista delle persone che prenotano un gelato ottenuta con successo
        "404":
          description: Prenotante non trovato
        "500":
          description: Errore interno del server
      summary: Lista delle persone che prenotano il gelato
      x-accepts:
      - application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prenotante'
        required: true
      responses:
        "201":
          description: Prenotante creato con successo
        "400":
          description: Richiesta non valida
        "500":
          description: Errore interno del server
      summary: Aggiungi un prenotante
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/prenotante/{id_prenotante}:
    delete:
      parameters:
      - description: ID del prenotante da cancellare
        explode: false
        in: path
        name: id_prenotante
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Prenotante cancellato con successo
        "404":
          description: Prenotante non trovato
        "500":
          description: Errore interno del server
      summary: Cancella un prenotante tramite ID
      x-accepts:
      - application/json
    get:
      parameters:
      - description: ID del prenotante
        explode: false
        in: path
        name: id_prenotante
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prenotante'
          description: Dettagli del prenotante recuperati con successo
        "404":
          description: Prenotante non trovato
        "500":
          description: Errore interno del server
      summary: Cerca prenotante per ID
      x-accepts:
      - application/json
    put:
      parameters:
      - description: ID del prenotante da aggiornare
        explode: false
        in: path
        name: id_prenotante
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prenotante'
        required: true
      responses:
        "200":
          description: Prenotante aggiornato con successo
        "404":
          description: Prenotante non trovato
        "400":
          description: Dati non validi
        "500":
          description: Errore interno del server
      summary: Aggiorna un prenotante esistente
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/prenota:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Prenotazione'
                type: array
          description: Lista delle prenotazioni ottenuta con successo
        "500":
          description: Errore interno del server
      summary: Ottieni una lista di prenotazioni
      x-accepts:
      - application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prenotazione'
        required: true
      responses:
        "201":
          description: Prenotazione creata con successo
        "400":
          description: Richiesta non valida
        "500":
          description: Errore interno del server
      summary: Aggiungi una nuova prenotazione
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/prenota/{id_prenotante}/{id_gelato}:
    delete:
      parameters:
      - description: ID del prenotante
        explode: false
        in: path
        name: id_prenotante
        required: true
        schema:
          type: integer
        style: simple
      - description: ID del gelato
        explode: false
        in: path
        name: id_gelato
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Prenotazione cancellata con successo
        "404":
          description: Prenotazione non trovata
        "500":
          description: Errore interno del server
      summary: Cancella una prenotazione tramite ID prenotante e ID gelato
      x-accepts:
      - application/json
    get:
      parameters:
      - description: ID del prenotante
        explode: false
        in: path
        name: id_prenotante
        required: true
        schema:
          type: integer
        style: simple
      - description: ID del gelato
        explode: false
        in: path
        name: id_gelato
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prenotazione'
          description: Dettagli della prenotazione recuperati con successo
        "404":
          description: Prenotazione non trovata
        "500":
          description: Errore interno del server
      summary: Cerca prenotazione per ID prenotante e ID gelato
      x-accepts:
      - application/json
    put:
      parameters:
      - description: ID del prenotante
        explode: false
        in: path
        name: id_prenotante
        required: true
        schema:
          type: integer
        style: simple
      - description: ID del gelato
        explode: false
        in: path
        name: id_gelato
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prenotazione'
        required: true
      responses:
        "200":
          description: Prenotazione aggiornata con successo
        "404":
          description: Prenotazione non trovata
        "400":
          description: Dati non validi
        "500":
          description: Errore interno del server
      summary: Aggiorna una prenotazione esistente
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  schemas:
    Gelato:
      example:
        descrizione: Gelato al cioccolato realizzato con ingredienti di alta qualit√†.
        nome: nome
        id: 0
      properties:
        id:
          description: ID univoco del gelato
          type: integer
        nome:
          description: Nome del gusto di gelato
          type: string
        descrizione:
          description: Descrizione del gelato
          example: Gelato al cioccolato realizzato con ingredienti di alta qualit√†.
          type: string
      required:
      - descrizione
      - id
      - nome
      type: object
    Prenotante:
      example:
        id_prenotante: 0
        nome: nome
      properties:
        id_prenotante:
          description: ID prenotante
          type: integer
        nome:
          description: Nome del prenotante
          type: string
      required:
      - id_prenotante
      - nome
      type: object
    Prenotazione:
      example:
        id_prenotante: 0
        id_gelato: 6
      properties:
        id_prenotante:
          description: ID del prenotante
          type: integer
        id_gelato:
          description: ID del gelato
          type: integer
      required:
      - id_gelato
      - id_prenotante
      type: object
